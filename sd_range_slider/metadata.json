{
  "src/components/SDRangeSlider.react.js": {
    "description": "SDRangeSlider is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "SDRangeSlider",
    "methods": [
      {
        "name": "splitLabel",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "label",
            "type": {
              "name": "string"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "number"
            }
          }
        ],
        "returns": {
          "type": {
            "name": "string"
          }
        }
      },
      {
        "name": "compressedLabelCategorical",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": {
          "type": {
            "name": "string"
          }
        }
      },
      {
        "name": "compressedLabel",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": {
          "type": {
            "name": "string"
          }
        }
      },
      {
        "name": "rangeComponent",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "allowCross": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Set allowCross to true to allow handles to cross",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "allValuesFormatter": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "All values formatter",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "allValuesText": {
        "flowType": {
          "name": "string"
        },
        "required": true,
        "description": "Text to display when all values are selected, e.g., 'all ages'"
      },
      "ascending": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Variable is strictly ascending?",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "buttonClassName": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "Class name to apply to the button",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "description": {
        "flowType": {
          "name": "string"
        },
        "required": true,
        "description": "Description of the variable to display in the Dialog"
      },
      "humanName": {
        "flowType": {
          "name": "string"
        },
        "required": true,
        "description": "Human-readable name of the variable to display"
      },
      "id": {
        "flowType": {
          "name": "string"
        },
        "required": true,
        "description": "Component ID"
      },
      "isCategorical": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Is the variable categorical? Use checkboxes instead then",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "marks": {
        "flowType": {
          "name": "signature",
          "type": "object",
          "raw": "{\n  /** Label for the mark */\n  number: string | T_STYLE_OBJ,\n}",
          "signature": {
            "properties": [
              {
                "key": "number",
                "value": {
                  "name": "union",
                  "raw": "string | T_STYLE_OBJ",
                  "elements": [
                    {
                      "name": "string"
                    },
                    {
                      "name": "signature",
                      "type": "object",
                      "raw": "{style: Object, label: string}",
                      "signature": {
                        "properties": [
                          {
                            "key": "style",
                            "value": {
                              "name": "Object",
                              "required": true
                            }
                          },
                          {
                            "key": "label",
                            "value": {
                              "name": "string",
                              "required": true
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "required": true
                }
              }
            ]
          }
        },
        "required": true,
        "description": "Marks on the slider.\nThe key determines the position,\nand the value determines what will show.\nIf you want to set the style of a specific mark point,\nthe value should be an object which\ncontains style and label properties."
      },
      "maxVal": {
        "flowType": {
          "name": "union",
          "raw": "string | number",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": true,
        "description": "Maximum value for the slider"
      },
      "minCategoriesSelected": {
        "flowType": {
          "name": "number"
        },
        "required": false,
        "description": "The minimum allowed number of categorical selections. Any fewer will trigger a warning.",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "minVal": {
        "flowType": {
          "name": "union",
          "raw": "string | number",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": true,
        "description": "Minimum value for the slider"
      },
      "noValuesText": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "Text to display when no values are selected, e.g., 'any age'",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "orHigherFormatter": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "Or higher string formatter",
        "defaultValue": {
          "value": "'{} or higher'",
          "computed": false
        }
      },
      "orLowerFormatter": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "Or less string formatter",
        "defaultValue": {
          "value": "'Under {}'",
          "computed": false
        }
      },
      "rangeFormatter": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "Formatter to use which takes min and max value",
        "defaultValue": {
          "value": "'{} to {}'",
          "computed": false
        }
      },
      "restrictedHigher": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Indicates that the slider's maximum range has (true) or has not (false) been restricted.\nDefaults to false",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "restrictedLower": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Indicates that the slider's lower range has (true) or has not (false) been restricted.\nDefaults to false",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "setProps": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(props: Object) => void",
          "signature": {
            "arguments": [
              {
                "name": "props",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "return": {
              "name": "void"
            }
          }
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      },
      "singleValueFormatting": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Should the range slider apply \"{} to {}\"-style formatting to the label is a single\nvalue is selected?",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "splitLabels": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Should the range slider try to split the label strings intelligently?",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "updatemode": {
        "flowType": {
          "name": "union",
          "raw": "'mouseup' | 'drag'",
          "elements": [
            {
              "name": "literal",
              "value": "'mouseup'"
            },
            {
              "name": "literal",
              "value": "'drag'"
            }
          ]
        },
        "required": false,
        "description": "Determines when the component should update\nits value. If `mouseup`, then the slider\nwill only trigger its value when the user has\nfinished dragging the slider. If `drag`, then\nthe slider will update its value continuously\nas it is being dragged.\nOnly use `drag` if your updates are fast.",
        "defaultValue": {
          "value": "'mouseup'",
          "computed": false
        }
      },
      "value": {
        "flowType": {
          "name": "Array",
          "elements": [
            {
              "name": "number"
            }
          ],
          "raw": "Array<number>"
        },
        "required": true,
        "description": "Value used to select the slider"
      },
      "warningMessageClassName": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "The classname used for styling the warning message if the user attempts to select no checkboxes",
        "defaultValue": {
          "value": "'selection-warning'",
          "computed": false
        }
      }
    }
  }
}